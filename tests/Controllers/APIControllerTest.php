<?php
/*
 * EngagementSummaryAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 on 11/02/2016
 */

use EngagementSummaryAPILib\APIException;
use EngagementSummaryAPILib\Exceptions;
use EngagementSummaryAPILib\APIHelper; 
use EngagementSummaryAPILib\Models;

class APIControllerTest extends PHPUnit_Framework_TestCase {
    
    /**
     * @var \EngagementSummaryAPILib\Controllers\APIController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new EngagementSummaryAPILib\EngagementSummaryAPIClient();
        self::$controller = $client->getClient();	
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Todo Add description for test testTest2
     */
    public function testTest2() {

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
        	$result = self::$controller->getEngagement();
        } catch(APIException $e) {};

        // Test response code
        $this->assertEquals(200, $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200");

        // Test whether the captured response is as we expected
        $this->assertNotNull($result,
            "Result does not exist");

        $this->assertEquals("", 
                $this->httpResponse->getResponse()->getRawBody(),
                "Response body does not match exactly");
    }

}
